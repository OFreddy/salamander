# This is a basic workflow that is automatically triggered

name: Build Solution

# Controls when the action will run. Workflow runs when push or pull to main  branch

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  OPENSAL_BUILD_DIR: ${{ github.workspace }}\build\

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Setup MSBuild (vswhere-path)
        id: setup_msbuild_explicit
        uses: ./
        with:
          vswhere-path: C:\ProgramData\chocolatey\bin
      - name: Setup MSBuild (PATH)
        id: setup_msbuild_path
        uses: ./
      - name: Setup MSBuild (fallback)
        id: setup_msbuild_fallback
        uses: ./
        env:
          PATH: ''
      - name: Setup MSBuild (x64)
        if: always()
        id: setup_msbuild_path_x64
        uses: ./
        with:
          vs-prerelease: true
          msbuild-architecture: 'x64'
      - name: Setup MSBuild (arm64)
        if: always()
        id: setup_msbuild_path_arm
        uses: ./
        with:
          vs-prerelease: true
          msbuild-architecture: 'arm64'
      - name: echo msbuild path
        run: |
          echo "vswhere-path: ${{ steps.setup_msbuild_explicit.outputs.msbuildPath }}"
          echo "PATH: ${{ steps.setup_msbuild_path.outputs.msbuildPath }}"
          echo "ARM PATH: ${{ steps.setup_msbuild_path_arm.outputs.msbuildPath }}"
          echo "ARM PATH: ${{ steps.setup_msbuild_path_x64.outputs.msbuildPath }}"
          echo "Fallback: ${{ steps.setup_msbuild_fallback.outputs.msbuildPath }}"
      - name: echo MSBuild
        run: msbuild -version          
      - name: Populate build
        run: |
          cd ${{ github.workspace }}\src\vcxproj
          .\!populate_build_dir.cmd
      - name: Build
        run: |
          cd ${{ github.workspace }}\src\vcxproj
          .\rebuild.cmd
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag#v}" \
              --generate-notes
